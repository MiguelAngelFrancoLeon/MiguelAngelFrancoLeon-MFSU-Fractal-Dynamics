# GitHub Actions CI/CD for MFSU
name: MFSU Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, '3.10', '3.11']
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov codecov
        
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        pytest tests/ --cov=mfsu --cov-report=xml --cov-report=term-missing -v
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  validate-science:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Download test data
      run: |
        mkdir -p data/test
        # Download minimal test datasets
        wget -O data/test/cmb_test.txt https://raw.githubusercontent.com/MiguelAngelFrancoLeon/MFSU-test-data/main/cmb_minimal.txt
        
    - name: Validate CMB analysis
      run: |
        python scripts/validate_cmb.py --test-mode
        
    - name: Validate fractal calculations
      run: |
        python scripts/validate_fractals.py --quick-test
        
    - name: Generate test figures
      run: |
        python scripts/generate_figures.py --test-mode --output-dir test_figures/
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      with:
        name: validation-results
        path: |
          test_figures/
          validation_report.html

  reproducibility:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || contains(github.event.hea
