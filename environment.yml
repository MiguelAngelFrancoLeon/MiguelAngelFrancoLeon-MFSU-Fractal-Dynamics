# MFSU - Unified Fractal-Stochastic Model
# Conda environment specification for complete reproducibility
# Author: Miguel Ángel Franco León
# Date: August 2025

name: mfsu
channels:
  - conda-forge
  - defaults
  - astropy

dependencies:
  # Python version
  - python=3.10

  # Core scientific computing
  - numpy=1.24.3
  - scipy=1.10.1
  - matplotlib=3.7.1
  - pandas=2.0.2

  # Advanced mathematical libraries
  - sympy=1.12
  - numba=0.57.0
  - cython=0.29.35

  # Statistical and machine learning
  - scikit-learn=1.2.2
  - statsmodels=0.14.0
  - emcee=3.1.4
  - corner=2.2.2

  # Data visualization
  - plotly=5.14.1
  - seaborn=0.12.2
  - bokeh=3.1.1
  - ipywidgets=8.0.6

  # Astronomical and cosmological analysis
  - astropy=5.3.1
  - healpy=1.16.6

  # Jupyter ecosystem
  - jupyter=1.0.0
  - jupyterlab=4.0.2
  - notebook=6.5.4
  - ipython=8.13.2

  # Development and testing
  - pytest=7.3.1
  - pytest-cov=4.1.0
  - black=23.3.0
  - flake8=6.0.0
  - mypy=1.3.0

  # Documentation
  - sphinx=6.2.1
  - sphinx-rtd-theme=1.2.2
  - myst-parser=1.0.0

  # File formats and I/O
  - h5py=3.8.0
  - netcdf4=1.6.4
  - xarray=2023.5.0
  - zarr=2.14.2

  # Parallel computing
  - dask=2023.5.0
  - joblib=1.2.0
  - multiprocess=0.70.14

  # Progress bars and utilities
  - tqdm=4.65.0
  - click=8.1.3
  - pyyaml=6.0

  # Git and version control
  - git=2.40.1
  - pre-commit=3.3.2

  # Additional dependencies via pip
  - pip=23.1.2
  - pip:
    # Fractal analysis specific
    - fractal-analysis==0.3.2
    - multifractal==0.1.5
    
    # Advanced statistical packages
    - pymc==5.4.0
    - arviz==0.15.1
    - numpyro==0.12.1
    
    # CMB analysis tools
    - camb==1.5.0
    - class-classy==3.2.0
    
    # Optimization and fitting
    - lmfit==1.2.1
    - iminuit==2.21.0
    
    # Additional visualization
    - plotnine==0.12.1
    - altair==5.0.1
    
    # MFSU specific packages (when available)
    - mfsu-core==1.0.0  # Main MFSU package
    
    # Development and quality assurance
    - pre-commit-hooks==4.4.0
    - bandit==1.7.5
    - safety==2.3.4
    
    # Documentation extras
    - sphinx-autodoc-typehints==1.23.0
    - sphinx-copybutton==0.5.2
    
    # Performance profiling
    - line-profiler==4.0.3
    - memory-profiler==0.60.0

# Environment variables for reproducibility
variables:
  - MFSU_DATA_PATH: ./data
  - MFSU_RESULTS_PATH: ./results
  - MFSU_CACHE_PATH: ./cache
  - PYTHONPATH: ./mfsu:$PYTHONPATH
  - NUMBA_THREADING_LAYER: omp
  - OMP_NUM_THREADS: 4

# Post-installation setup
# Run after environment creation:
# conda activate mfsu
# pip install -e .
# python -c "import mfsu; mfsu.setup_environment()"

# Performance optimization settings
# For large-scale simulations:
# export OPENBLAS_NUM_THREADS=1
# export MKL_NUM_THREADS=1
# export NUMEXPR_MAX_THREADS=4

# Reproducibility settings
# export PYTHONHASHSEED=42
# export CUBLAS_WORKSPACE_CONFIG=:4096:8

# Notes:
# - This environment supports the complete MFSU workflow
# - Includes dependencies for CMB analysis, fractal computation, and statistical validation
# - Optimized for both interactive development and production simulations
# - All package versions are pinned for maximum reproducibility
# - Compatible with Windows, macOS, and Linux

# Installation instructions:
# 1. conda env create -f environment.yml
# 2. conda activate mfsu  
# 3. pip install -e .
# 4. python scripts/validate_environment.py

# Update instructions:
# conda env update -f environment.yml --prune
